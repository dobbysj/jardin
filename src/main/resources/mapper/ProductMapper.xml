<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javalec.ex.dao.ProductDao">
	<!-- 제품 전체 리스트  -->
	<select id="getAllPList" resultType="com.javalec.ex.dto.ProductDto">
		select * from product_tb  where p_delflag = 'N' order by p_num desc
	</select>

	<!-- 제품 insert -->
	<insert id="insertProduct" parameterType="com.javalec.ex.dto.ProductDto">
		insert into product_tb values(p_seq.nextval,#{p_step1},#{p_step2},#{p_name},#{p_price},#{p_point},#{p_producer},#{p_expiry},
		#{p_type},#{p_capacity},#{p_detail},#{p_location},#{p_gene},#{p_import},#{p_stock},#{p_thumb_img1},#{p_thumb_img2},#{p_thumb_img3},#{p_content_img},sysdate,sysdate,'N',0)
	</insert>
	
	<!-- 제품 하나의 정보  -->
	<select id="getProductInfo" resultType="com.javalec.ex.dto.ProductDto" parameterType="Integer">
		select * from product_tb where p_num = #{p_num}
	</select>
	
	<!-- 제품 수정 -->
	<update id="updateProduct" parameterType="com.javalec.ex.dto.ProductDto">
		update product_tb set p_step1=#{p_step1},p_step2=#{p_step2},p_name=#{p_name},p_price=#{p_price},p_point=#{p_point},p_producer=#{p_producer},p_expiry=#{p_expiry},p_type=#{p_type},
		p_capacity=#{p_capacity},p_detail=#{p_detail},p_location=#{p_location},p_gene=#{p_gene},p_import=#{p_import},p_stock=#{p_stock},
		p_thumb_img1=#{p_thumb_img1},p_thumb_img2=#{p_thumb_img2},p_thumb_img3=#{p_thumb_img3},p_content_img=#{p_content_img},p_update=sysdate where p_num = #{p_num}
	</update>

	<!-- 제품 삭제처리 -->
	<update id="deleteProduct" parameterType="Integer">
		update product_tb set p_delflag='Y' where p_num = #{p_num}
	</update>
	
	<!-- 삭제된 제품 전체리스트 -->
	<select id="getDelPList" resultType="com.javalec.ex.dto.ProductDto">
		select * from product_tb  where p_delflag = 'Y' order by p_num desc
	</select>
	
	<!-- 제품 복구처리 -->
	<update id="backProduct" parameterType="Integer">
		update product_tb set p_delflag='N' where p_num = #{p_num}
	</update>
	
	<!-- 제품 리스트 검색 -->
	<select id="getSearchList" parameterType="hashmap"  resultType="com.javalec.ex.dto.ProductDto" >
        select * from product_tb where
		p_delflag = #{p_delflag} and
 		p_sysdate between to_date(#{e_start_day},'yy/MM/dd') and to_date(#{e_end_day},'yy/MM/dd')+1
		and 
        p_name like '%' ||#{p_name} || '%' and
        p_step2 = #{p_step2}
	</select>
	
	<!-- ================================= 유저 ================================== -->
	
	<!-- 제품 전체 리스트  step1 -->
	<select id="getU_ProductAllList" parameterType="String" resultType="com.javalec.ex.dto.ProductDto">
		select * from product_tb  where p_delflag = 'N' and 
		p_step1= #{p_step1} order by p_num desc
	</select>
	
	<!-- 제품 전체 리스트  step2 -->
	<select id="getU_ProductList" parameterType="String" resultType="com.javalec.ex.dto.ProductDto">
		select * from product_tb  where p_delflag = 'N' and 
		p_step2= #{p_step2} order by p_num desc
	</select>
	
	<!-- 리뷰 등록 -->
	<insert id="review_insert" parameterType="com.javalec.ex.dto.ReviewUserDto">
		insert into review_user_tb values(ru_seq.nextval,#{p_num},#{m_num},#{ru_title},#{ru_content},#{ru_score},sysdate,0,'답변대기','노출',#{ru_img},#{ru_type},#{ol_num})
	</insert>
	
	<!-- 리뷰 등록시 제품에 별점반영 -->
	<update id="update_score" parameterType="Integer">
		update product_tb set p_score = (select round(sum(ru_score)/count(*)) from review_user_tb where p_num = #{p_num}) where p_num = #{p_num}
	</update>
	
	<!-- 제품 리뷰 가져오기 (타입별 답글까지 가져와야함)-->
	<select id="getUserReview"  resultType="hashmap" parameterType="hashmap"> 
		select ru.*,rpad(substr(m.m_id,1,4),length(m.m_id),'*') as m_id, ra.*, a.ad_grade 
		from review_user_tb ru 
		left join member_tb m on m.m_num = ru.m_num 
		left join review_answer_tb ra on ra.ru_num = ru.ru_num  
		left join admin_tb a on ra.ad_num = a.ad_num
        where ru.ru_type= #{ru_type}
 		and ru.p_num = #{p_num}
        and ru.Ru_visility = '노출'
	</select>
	
	<!-- 제품별 count (리뷰 가져올때 가져오면 되는데...group by로 바꿔야 가능할것같다... 그냥..안할래)-->
	<select id="review_count" parameterType="Integer" resultType="Integer">
		select count(*) from review_user_tb where p_num = #{p_num}
	</select>
	
	
	
</mapper>