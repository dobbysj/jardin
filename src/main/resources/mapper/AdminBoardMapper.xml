<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javalec.ex.dao.AdminBoardDao">
	<!-- 아작스 수업(댓글달기) -->
	<select id="comment_List" resultType="com.javalec.ex.dto.CommentDto">
		select * from ccomment order by cdate desc
	</select>
	<!-- 댓글 삭제 -->
	<delete id="comment_delete" parameterType="Integer">
		delete from ccomment where cId = #{cId}
	</delete>

	<!-- 관리자 -->
	
	<!-- faq작성  -->
	<insert id="insertFaq" parameterType="com.javalec.ex.dto.FaqDto">
		insert into faq_tb values(faq_seq.nextval,#{f_step},#{f_title},#{f_content},to_date(sysdate,'YY/MM/DD'),'N')
	</insert>
	
	<!-- faq수정 -->
	<update id="updateFaq" parameterType="com.javalec.ex.dto.FaqDto">
		update faq_tb set f_step=#{f_step}, f_title=#{f_title}, f_content=#{f_content} where f_num = #{f_num} 
	</update>
			
	<!-- faq삭제 -->
	<delete id="deleteFaq" parameterType="Integer">
		delete from faq_tb where f_num = #{f_num}
	</delete>
	
	<!-- faq노출 상태 변경 -->
	<update id="updateFaqDelflag" parameterType="Integer">
		update faq_tb set 
		f_delflag = case 
		when f_delflag = 'Y' then 'N' 
		when f_delflag = 'N' then 'Y'
		end
		where f_num = #{f_num}
	</update>
	
	
	<!-- faq전체 리스트 -->
	<select id="getAllFaqList" resultType="com.javalec.ex.dto.FaqDto">
		select rownum,f.* from faq_tb f order by f_num desc
	</select>
	
	<!-- faq 하나의 정보-->
	<select id="faqInfo" parameterType="Integer" resultType="com.javalec.ex.dto.FaqDto">
		select * from faq_tb where f_num = #{f_num}
	</select>
	
	<!-- faq coffee   검색 -->
	<select id="getSearchFaq" parameterType="hashmap"  resultType="com.javalec.ex.dto.FaqDto" >
        select * from faq_tb where 
 		f_sysdate between to_date(#{e_start_day},'yy/MM/dd') and to_date(#{e_end_day},'yy/MM/dd')+1 and 
        ${type} like '%' || #{keyword}|| '%' and
        f_step = #{f_step}
	</select>

	<!-- ========================= enjoy coffee   ============================== -->
	
	<!-- enjoy coffee insert -->
	<insert id="enjoy_insert" parameterType="com.javalec.ex.dto.EnjoyCoffeeDto">
		insert into enjoy_coffee_tb values(ej_seq.nextval,#{ad_num},#{ej_title},#{ej_content},sysdate,#{ej_img},0)
	</insert>
	
	<!-- enjoy coffee 한개의 정보 (상세보기, 수정에 쓰임) -->
	<select id="enjoy_info" parameterType="Integer" resultType="com.javalec.ex.dto.EnjoyCoffeeDto">
		select * from enjoy_coffee_tb where ej_num = #{ej_num}
	</select>
	
	<!-- enjoy coffee update -->
	<update id="enjoy_update" parameterType="com.javalec.ex.dto.EnjoyCoffeeDto" >
		update enjoy_coffee_tb set ad_num=#{ad_num}, ej_title=#{ej_title} ,ej_content=#{ej_content},
		ej_img=#{ej_img} where ej_num = #{ej_num}
	</update>
	
	
	<!-- enjoy coffee 완전 삭제 -->
	<delete id="enjoy_delete" parameterType="Integer" >
		delete from enjoy_coffee_tb where ej_num = #{ej_num}
	</delete>
	
	<!-- enjoy coffee 전체 리스트(관리자) -->
	<select id="enjoy_allList" resultType="com.javalec.ex.dto.EnjoyCoffeeDto">
		select * from enjoy_coffee_tb order by ej_num desc
	</select>

	<!-- enjoy coffee   검색 -->
	<select id="getSearchEnjoy" parameterType="hashmap"  resultType="com.javalec.ex.dto.EnjoyCoffeeDto" >
        select * from enjoy_coffee_tb where 
 		ej_date between to_date(#{e_start_day},'yy/MM/dd') and to_date(#{e_end_day},'yy/MM/dd')+1 and 
        ${type} like '%' || #{keyword}|| '%'
	</select>
	
	<!-- ================================== 후기 ====================================== -->
	<!-- 후기 전체리스트 -->
	<select id="getAllReveiw" resultType="map" parameterType="String">
		select rownum,ru.*,p.p_name from review_user_tb ru left join product_tb p on p.p_num = ru.p_num where ru_type = #{ru_type}
	</select>
	
	<!-- 후기 상태 변경 -->
	<update id="updateVisility" parameterType="Integer">
		update review_user_tb set 
		ru_visility = case 
		when ru_visility = '노출' then '숨김' 
		when ru_visility = '숨김' then '노출'
		end
		where ru_num = #{ru_num}
	</update>
	
	<!-- 답글 달리면 답변완료로 변경 -->
	<update id="updateStatus" parameterType="Integer">
		update review_user_tb set ru_status = '답변완료' where ru_num = #{ru_num}
	</update>
	
	
	<!-- 후기  검색 -->
	<select id="getSearchReview" parameterType="hashmap"  resultType="map" >
       select ru.*,p.p_name from review_user_tb ru left join product_tb p on p.p_num = ru.p_num where
 		ru.ru_date between to_date(#{e_start_day},'yy/MM/dd') and to_date(#{e_end_day},'yy/MM/dd')+1 and 
        ${type} like '%' || #{keyword}|| '%'
	</select>
	
	<!-- 후기 상세보기 -->
	<select id="getReviewDetail" parameterType="Integer" resultType="map">
		 select ru.*,p.p_name from review_user_tb ru left join product_tb p on p.p_num = ru.p_num where ru.ru_num = #{ru_num}
	</select>
	
	<!-- QnA -->
	<!-- QnA전체 리스트 -->
	<select id="getQnaList" resultType="hashmap">
		select rownum,qu.*,m.m_id,p.p_name,qa.* from qna_user_tb qu
		left join product_tb p on p.p_num = qu.p_num
		left join member_tb m on m.m_num = qu.m_num
		left join qna_answer_tb qa on qa.qu_num = qu.qu_num
	</select>
	
	<!-- QnA하나의 정보 -->
	<select id="qnaInfo" parameterType="Integer" resultType="com.javalec.ex.dto.QnrUserDto">
		select * from qna_user_tb where qu_num = #{qu_num}
	</select>
	
	<!-- 답변 insert -->
	<insert id="qna_answer_insert" parameterType="com.javalec.ex.dto.QnrAnswerDto">
		insert into qna_answer_tb values(qa_seq.nextval,#{qu_num},1,#{qa_content},sysdate)
	</insert>
	
	<!-- 문의 처리상태 변경 -->
	<update id="qna_status_update" parameterType="Integer">
		update qna_user_tb set 
		qu_status = case 
		when qu_status = '답변대기' then '답변완료' 
		when qu_status = '답변완료' then '답변대기'
		end
		where qu_num = #{qu_num}
	</update>
	
	<!-- 답변 수정  -->
	<update id="qna_answer_update" parameterType="com.javalec.ex.dto.QnrAnswerDto">
		update qna_answer_tb set qa_content = #{qa_content} where qa_num = #{qa_num}
	</update>
	
	<!-- 답변 하나의 정보 -->
	<select id="qna_answer_info" parameterType="Integer" resultType="hashmap">
		select qu.qu_content,qa.* from qna_answer_tb qa left join qna_user_tb qu on qa.qu_num=qu.qu_num where qu.qu_num = #{qu_num}
	</select>
	
	<!-- 답변 삭제 (다시 대기 상태로) -->
	<delete id="qna_answer_delete" parameterType="Integer">
		delete from qna_answer_tb where qu_num = #{qu_num}
	</delete>
	
	<!-- 답변 검색 -->
	<select id="getSearchQna" resultType="hashmap" parameterType="hashmap">
		select rownum,qu.*,qa.*,p.p_name,m.m_id from qna_user_tb qu 
		left join qna_answer_tb qa on qa.qu_num= qu.qu_num 
		left join product_tb p on p.p_num = qu.p_num
		left join member_tb m on m.m_num = qu.m_num
		where qu.qu_date between to_date(#{e_start_day},'yy/MM/dd') 
 		and to_date(#{e_end_day},'yy/MM/dd')+1 
 		and ${type} like '%' || #{keyword}|| '%'
	</select>
	
	
</mapper>